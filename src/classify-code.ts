// @ts-ignore
import Bayes from "bayes";
import * as state from "./state.json";

export type Language =
  | 'abap'
  | 'abnf'
  | 'actionscript'
  | 'ada'
  | 'agda'
  | 'al'
  | 'antlr4'
  | 'apacheconf'
  | 'apl'
  | 'applescript'
  | 'aql'
  | 'arduino'
  | 'arff'
  | 'asciidoc'
  | 'asm6502'
  | 'aspnet'
  | 'autohotkey'
  | 'autoit'
  | 'bash'
  | 'basic'
  | 'batch'
  | 'bbcode'
  | 'bison'
  | 'bnf'
  | 'brainfuck'
  | 'brightscript'
  | 'bro'
  | 'c'
  | 'cil'
  | 'clike'
  | 'clojure'
  | 'cmake'
  | 'coffeescript'
  | 'concurnas'
  | 'cpp'
  | 'crystal'
  | 'csharp'
  | 'csp'
  | 'css'
  | 'css-extras'
  | 'cypher'
  | 'd'
  | 'dart'
  | 'dax'
  | 'diff'
  | 'django'
  | 'dns-zone-file'
  | 'docker'
  | 'ebnf'
  | 'editorconfig'
  | 'eiffel'
  | 'ejs'
  | 'elixir'
  | 'elm'
  | 'erb'
  | 'erlang'
  | 'etlua'
  | 'excel-formula'
  | 'factor'
  | 'firestore-security-rules'
  | 'flow'
  | 'fortran'
  | 'fsharp'
  | 'ftl'
  | 'gcode'
  | 'gdscript'
  | 'gedcom'
  | 'gherkin'
  | 'git'
  | 'glsl'
  | 'gml'
  | 'go'
  | 'graphql'
  | 'groovy'
  | 'haml'
  | 'handlebars'
  | 'haskell'
  | 'haxe'
  | 'hcl'
  | 'hlsl'
  | 'hpkp'
  | 'hsts'
  | 'http'
  | 'ichigojam'
  | 'icon'
  | 'iecst'
  | 'ignore'
  | 'inform7'
  | 'ini'
  | 'io'
  | 'j'
  | 'java'
  | 'javadoc'
  | 'javascript'
  | 'javastacktrace'
  | 'jolie'
  | 'jq'
  | 'js-extras'
  | 'js-templates'
  | 'jsdoc'
  | 'json'
  | 'json5'
  | 'jsonp'
  | 'jsstacktrace'
  | 'jsx'
  | 'julia'
  | 'keyman'
  | 'kotlin'
  | 'latex'
  | 'latte'
  | 'less'
  | 'lilypond'
  | 'liquid'
  | 'lisp'
  | 'livescript'
  | 'llvm'
  | 'lolcode'
  | 'lua'
  | 'makefile'
  | 'markdown'
  | 'markup'
  | 'matlab'
  | 'mel'
  | 'mizar'
  | 'monkey'
  | 'moonscript'
  | 'n1ql'
  | 'n4js'
  | 'nand2tetris-hdl'
  | 'nasm'
  | 'neon'
  | 'nginx'
  | 'nim'
  | 'nix'
  | 'nsis'
  | 'objectivec'
  | 'ocaml'
  | 'opencl'
  | 'oz'
  | 'parigp'
  | 'parser'
  | 'pascal'
  | 'pascaligo'
  | 'pcaxis'
  | 'peoplecode'
  | 'perl'
  | 'php'
  | 'php-extras'
  | 'phpdoc'
  | 'plsql'
  | 'powerquery'
  | 'powershell'
  | 'processing'
  | 'prolog'
  | 'properties'
  | 'protobuf'
  | 'pug'
  | 'puppet'
  | 'pure'
  | 'purebasic'
  | 'python'
  | 'q'
  | 'qml'
  | 'qore'
  | 'r'
  | 'racket'
  | 'reason'
  | 'regex'
  | 'renpy'
  | 'rest'
  | 'rip'
  | 'roboconf'
  | 'robotframework'
  | 'ruby'
  | 'rust'
  | 'sas'
  | 'sass'
  | 'scala'
  | 'scheme'
  | 'scss'
  | 'shell-session'
  | 'smali'
  | 'smalltalk'
  | 'smarty'
  | 'solidity'
  | 'solution-file'
  | 'soy'
  | 'sparql'
  | 'splunk-spl'
  | 'sqf'
  | 'sql'
  | 'stylus'
  | 'swift'
  | 't4-cs'
  | 't4-vb'
  | 'tap'
  | 'tcl'
  | 'textile'
  | 'toml'
  | 'tsx'
  | 'tt2'
  | 'turtle'
  | 'twig'
  | 'typescript'
  | 'unrealscript'
  | 'vala'
  | 'vbnet'
  | 'velocity'
  | 'verilog'
  | 'vhdl'
  | 'vim'
  | 'visual-basic'
  | 'warpscript'
  | 'wasm'
  | 'wiki'
  | 'xeora'
  | 'xml-doc'
  | 'xojo'
  | 'xquery'
  | 'yaml'
  | 'yang'
  | 'zig';


const langs = Object.keys((state as any).categories);

export async function classifyCode(input: string): Promise<Language | undefined> {
  const classifier = Bayes.fromJson(JSON.stringify(state));
  classifier.tokenizer = (text: string) => text.split(/\s+/)
  return classifier.categorize(input);
}
